/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Componentid = number;
export type Name = string;
export type Composition = null | string;
export type Name1 = string;
export type Abundance = null | number;
export type Ratio = null | number;
export type PH = null | number;
export type Id = number;
export type Name2 = string;
export type Symbol = string;

export interface CompositionCreateUpdate {
  Component: ComponentCreateUpdate;
  abundance?: Abundance;
  ratio?: Ratio;
  ph?: PH;
  ConcentrationType?: ConcentrationType;
}
export interface ComponentCreateUpdate {
  componentId?: Componentid;
  name: Name;
  composition?: Composition;
  ComponentType: ComponentType;
}
export interface ComponentType {
  name: Name1;
}
export interface ConcentrationType {
  concentrationTypeId: Id;
  name: Name2;
  symbol: Symbol;
}

type Constructor<T = {}> = new (...args: any[]) => T;
export function withCompositionCreateUpdate<TBase extends Constructor>(Base: TBase) {
  return class WithCompositionCreateUpdate extends Base {
    Component: ComponentCreateUpdate;
    abundance?: Abundance;
    ratio?: Ratio;
    ph?: PH;
    ConcentrationType?: ConcentrationType;
  }
}
export function withComponentCreateUpdate<TBase extends Constructor>(Base: TBase) {
  return class WithComponentCreateUpdate extends Base {
    componentId?: Componentid;
    name: Name;
    composition?: Composition;
    ComponentType: ComponentType;
  }
}
export function withComponentType<TBase extends Constructor>(Base: TBase) {
  return class WithComponentType extends Base {
    name: Name1;
  }
}
export function withConcentrationType<TBase extends Constructor>(Base: TBase) {
  return class WithConcentrationType extends Base {
    concentrationTypeId: Id;
    name: Name2;
    symbol: Symbol;
  }
}
