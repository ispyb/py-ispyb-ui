/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Beamlinesetupid = number;
export type Synchrotronmode = string;
export type Undulatortype1 = string;
export type Undulatortype2 = string;
export type Undulatortype3 = string;
export type Focalspotsizeatsample = number;
export type Focusingoptic = string;
export type Beamdivergencehorizontal = number;
export type Beamdivergencevertical = number;
export type Polarisation = number;
export type Monochromatortype = string;
export type Setupdate = string;
export type Synchrotronname = string;
export type Maxexptimeperdatacollection = number;
export type Minexposuretimeperimage = number;
export type Goniostatmaxoscillationspeed = number;
export type Goniostatminoscillationwidth = number;
export type Mintransmission = number;
export type Cs = number;
export type Recordtimestamp = string;

export interface BeamLineSetup {
  beamLineSetupId: Beamlinesetupid;
  synchrotronMode?: Synchrotronmode;
  undulatorType1?: Undulatortype1;
  undulatorType2?: Undulatortype2;
  undulatorType3?: Undulatortype3;
  focalSpotSizeAtSample?: Focalspotsizeatsample;
  focusingOptic?: Focusingoptic;
  beamDivergenceHorizontal?: Beamdivergencehorizontal;
  beamDivergenceVertical?: Beamdivergencevertical;
  polarisation?: Polarisation;
  monochromatorType?: Monochromatortype;
  setupDate?: Setupdate;
  synchrotronName?: Synchrotronname;
  maxExpTimePerDataCollection?: Maxexptimeperdatacollection;
  minExposureTimePerImage?: Minexposuretimeperimage;
  goniostatMaxOscillationSpeed?: Goniostatmaxoscillationspeed;
  goniostatMinOscillationWidth?: Goniostatminoscillationwidth;
  minTransmission?: Mintransmission;
  CS?: Cs;
  recordTimeStamp: Recordtimestamp;
}

type Constructor<T = {}> = new (...args: any[]) => T;
export function withBeamLineSetup<TBase extends Constructor>(Base: TBase) {
  return class WithBeamLineSetup extends Base {
    beamLineSetupId: Beamlinesetupid;
    synchrotronMode?: Synchrotronmode;
    undulatorType1?: Undulatortype1;
    undulatorType2?: Undulatortype2;
    undulatorType3?: Undulatortype3;
    focalSpotSizeAtSample?: Focalspotsizeatsample;
    focusingOptic?: Focusingoptic;
    beamDivergenceHorizontal?: Beamdivergencehorizontal;
    beamDivergenceVertical?: Beamdivergencevertical;
    polarisation?: Polarisation;
    monochromatorType?: Monochromatortype;
    setupDate?: Setupdate;
    synchrotronName?: Synchrotronname;
    maxExpTimePerDataCollection?: Maxexptimeperdatacollection;
    minExposureTimePerImage?: Minexposuretimeperimage;
    goniostatMaxOscillationSpeed?: Goniostatmaxoscillationspeed;
    goniostatMinOscillationWidth?: Goniostatminoscillationwidth;
    minTransmission?: Mintransmission;
    CS?: Cs;
    recordTimeStamp: Recordtimestamp;
  }
}
