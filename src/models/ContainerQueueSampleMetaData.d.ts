/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Datacollectionid = number;
export type Runstatus = string;
/**
 * Related data collections
 */
export type Datacollections = ContainerQueueDataCollection[];
/**
 * Related dataCollectionGroupId
 */
export type Datacollectiongroupid = number;
/**
 * Related sessionId
 */
export type Sessionid = number;
/**
 * Related proposal
 */
export type Proposal = string;
/**
 * Time first datacollection started
 */
export type Started = string;
/**
 * Time last datacollection ended
 */
export type Finished = string;
/**
 * Types of data collections
 */
export type Types = string[];

export interface ContainerQueueSampleMetaData {
  datacollections: Datacollections;
  dataCollectionGroupId?: Datacollectiongroupid;
  sessionId?: Sessionid;
  proposal?: Proposal;
  started?: Started;
  finished?: Finished;
  types?: Types;
}
export interface ContainerQueueDataCollection {
  dataCollectionId: Datacollectionid;
  runStatus?: Runstatus;
}

type Constructor<T = {}> = new (...args: any[]) => T;
export function withContainerQueueSampleMetaData<TBase extends Constructor>(Base: TBase) {
  return class WithContainerQueueSampleMetaData extends Base {
    datacollections: Datacollections;
    dataCollectionGroupId?: Datacollectiongroupid;
    sessionId?: Sessionid;
    proposal?: Proposal;
    started?: Started;
    finished?: Finished;
    types?: Types;
  }
}
export function withContainerQueueDataCollection<TBase extends Constructor>(Base: TBase) {
  return class WithContainerQueueDataCollection extends Base {
    dataCollectionId: Datacollectionid;
    runStatus?: Runstatus;
  }
}
