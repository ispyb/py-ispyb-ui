import { Entity } from '@rest-hooks/rest';
import { SingletonEntity } from 'api/resources/Base/Singleton';

/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Eventchainid = number;
export type Datacollectionid = number;
export type Name = string;
export type Eventid = number;
export type Eventchainid1 = number;
export type Componentid = number;
export type Eventtypeid = number;
export type Name1 = string;
export type Offset = number;
export type Duration = number;
export type Period = number;
export type Repetition = number;
export type Eventtypeid1 = number;
export type Name2 = string;
export type Events = EventResponse[];

export interface EventChainResponse {
  eventChainId: Eventchainid;
  dataCollectionId: Datacollectionid;
  name?: Name;
  events: Events;
}
export interface EventResponse {
  eventId: Eventid;
  eventChainId: Eventchainid1;
  componentId?: Componentid;
  eventTypeId: Eventtypeid;
  name?: Name1;
  offset: Offset;
  duration?: Duration;
  period?: Period;
  repetition?: Repetition;
  EventType: EventType;
}
export interface EventType {
  eventTypeId: Eventtypeid1;
  name: Name2;
}


export abstract class EventChainResponseBase extends Entity {
  eventChainId: Eventchainid;
  dataCollectionId: Datacollectionid;
  name?: Name;
  events: Events;
}

export abstract class EventChainResponseSingletonBase extends SingletonEntity {
  eventChainId: Eventchainid;
  dataCollectionId: Datacollectionid;
  name?: Name;
  events: Events;
}

export abstract class EventResponseBase extends Entity {
  eventId: Eventid;
  eventChainId: Eventchainid1;
  componentId?: Componentid;
  eventTypeId: Eventtypeid;
  name?: Name1;
  offset: Offset;
  duration?: Duration;
  period?: Period;
  repetition?: Repetition;
  EventType: EventType;
}

export abstract class EventResponseSingletonBase extends SingletonEntity {
  eventId: Eventid;
  eventChainId: Eventchainid1;
  componentId?: Componentid;
  eventTypeId: Eventtypeid;
  name?: Name1;
  offset: Offset;
  duration?: Duration;
  period?: Period;
  repetition?: Repetition;
  EventType: EventType;
}

export abstract class EventTypeBase extends Entity {
  eventTypeId: Eventtypeid1;
  name: Name2;
}

export abstract class EventTypeSingletonBase extends SingletonEntity {
  eventTypeId: Eventtypeid1;
  name: Name2;
}

