/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type SubsampleType = string;
export type Comments = null | string;
export type Blsampleid = number;
/**
 * Number of data collections
 */
export type Datacollections = number;
/**
 * Types of data collections
 */
export type Types = string[];
export type Blsubsampleid = number;
export type Name = string;
export type Posx = number;
export type Posy = number;

export interface SubSample {
  type?: SubsampleType;
  comments?: Comments;
  blSampleId: Blsampleid;
  _metadata: SubSampleMetaData;
  blSubSampleId: Blsubsampleid;
  BLSample: SubSampleSample;
  Position1?: Position;
  Position2?: Position;
}
export interface SubSampleMetaData {
  datacollections: Datacollections;
  types?: Types;
}
export interface SubSampleSample {
  name: Name;
}
export interface Position {
  posX: Posx;
  posY: Posy;
}

type Constructor<T = {}> = new (...args: any[]) => T;
export function withSubSample<TBase extends Constructor>(Base: TBase) {
  return class WithSubSample extends Base {
    type?: SubsampleType;
    comments?: Comments;
    blSampleId: Blsampleid;
    _metadata: SubSampleMetaData;
    blSubSampleId: Blsubsampleid;
    BLSample: SubSampleSample;
    Position1?: Position;
    Position2?: Position;
  }
}
export function withSubSampleMetaData<TBase extends Constructor>(Base: TBase) {
  return class WithSubSampleMetaData extends Base {
    datacollections: Datacollections;
    types?: Types;
  }
}
export function withSubSampleSample<TBase extends Constructor>(Base: TBase) {
  return class WithSubSampleSample extends Base {
    name: Name;
  }
}
export function withPosition<TBase extends Constructor>(Base: TBase) {
  return class WithPosition extends Base {
    posX: Posx;
    posY: Posy;
  }
}
